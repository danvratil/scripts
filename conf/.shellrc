# .shellrc

export CC=clang
export CXX=clang++
export LDFLAGS="-fuse-ld=lld"
export CCACHE_PREFIX="icecc"
export ICECC_CC=/usr/bin/clang
export ICECC_CXX=/usr/bin/clang++

#export CFLAGS="-Qunused-arguments -fcolor-diagnostics"
#export CXXFLAGS="-Qunused-arguments -fcolor-diagnostics"
#export MAKEFLAGS="-j5"
#export ICECC_CC="/usr/bin/gcc"
#export ICECC_CXX="/usr/bin/g++"

alias 'ls'='lsd'
alias 'll'='ls -lAh'
alias 'sl'='ls'
alias 'rm'='rm -I'
alias 'grep'='grep --colour=always'
alias 'cat'='bat'
alias 'valhalla'='ssh dvratil@83.167.228.39'

alias 'aterm'='/usr/bin/aterm -name aterm -sl 3000 -tr -si -sk -sh 20 -fn -misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-2'
alias 'cmake-overlay'='cmake .. -DCMAKE_INSTALL_PREFIX=/data/install/kde -DCMAKE_BUILD_TYPE=Debug -DLIB_SUFFIX=64 -DCMAKE_EXPORT_COMPILE_COMMANDS=ON'
alias 'cmake-kde'='cmake -DCMAKE_INSTALL_PREFIX=/data/install/kde -DCMAKE_BUILD_TYPE=Debug -DLIB_SUFFIX=64 -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_EXE_LINKER_FLAGS="-lstdc++" -DCMAKE_MODULE_LINKER_FLAGS="-lstdc++" -DCMAKE_SHARED_LINKER_FLAGS="-lstdc++"'
alias 'cmake-avast'='cmake -DCMAKE_INSTALL_PREFIX=/data/install/avast -DCMAKE_BUILD_TYPE=Debug -DLIB_SUFFIX=64 -DCMAKE_EXPORT_COMPILE_COMMANDS=ON'
alias 'kdesrc-build'='/data/KDE/src/kdesrc-build/kdesrc-build'
alias 'yum'='dnf'
alias 'pacman'='sudo pacman'
#alias 'fuck'='sudo $(history -p \!\!)'
alias 'kde'='cd /data/KDE/'
alias 'pastekde'='pastebinit -b paste.kde.org'
alias 'venv'='source ./venv/bin/activate'
#alias 'vim'='vimx'
alias 'v'='vim'
#alias 'pim-docker'='/data/KDE/src/scratch/dvratil/kdepim-docker/run.sh /data/KDE'
alias 'wireshark'='DISPLAY=":0" wireshark >/dev/null 2>&1'

# Avast
alias 'supe'='su --preserve-environment'

# Czechitas
alias 'czechitas'='cd /home/dvratil/Documents/Work/Czechitas'

alias 'configure-qt5'='../configure -prefix /data/install/qt5 -nomake examples -developer-build -debug -confirm-license -opensource -system-xkbcommon -system-harfbuzz -journald -system-sqlite --cups --ccache'

# Source avast-specific aliases that can't go to public git
if [[ -f $HOME/.avastshellrc ]]; then
    . $HOME/.avastshellrc
fi


# User specific aliases and functions

function cdbuild() {
	_path=`pwd`
	if [[ $_path == /data/KDE/src* ]]; then
		cd `echo $_path | sed "s/\/data\/KDE\/src/\/data\/KDE\/build\//"`
	else
		cd /data/KDE/src
	fi
}

if [ -e $HOME/.qtversion ]; then
    _QT_VERSION=`cat $HOME/.qtversion`
else
    _QT_VERSION="5"
fi

_QT_PREFIX="/data/install/qt${_QT_VERSION}"
_KDE_PREFIX="/data/install/kde"
_AVAST_PREFIX="/data/install/avast"

if [[ $LD_LIBRARY_PATH != *"${_KDE_PREFIX}/lib64:"* ]]; then
    export LD_LIBRARY_PATH=${_KDE_PREFIX}/lib64:/usr/local/lib64:$LD_LIBRARY_PATH
fi
if [[ $LD_LIBRARY_PATH != *"${_KDE_PREFIX}/lib:"* ]]; then
    export LD_LIBRARY_PATH=${_KDE_PREFIX}/lib:$LD_LIBRARY_PATH
fi

if [[ $LD_LIBRARY_PATH != *"${_QT_PREFIX}/lib64:"* ]]; then
    export LD_LIBRARY_PATH=${_QT_PREFIX}/lib64:$LD_LIBRARY_PATH
fi
if [[ $LD_LIBRARY_PATH != *"${_QT_PREFIX}/lib:"* ]]; then
    export LD_LIBRARY_PATH=${_QT_PREFIX}/lib:$LD_LIBRARY_PATH
fi

if [[ ! -z "${_AVAST_PREFIX}" ]]; then
    if [[ $LD_LIBRARY_PATH != *"${_AVAST_PREFIX}/lib:"* ]]; then
        export LD_LIBRARY_PATH=${_AVAST_PREFIX}/lib:$LD_LIBRARY_PATH
    fi
    if [[ $LD_LIBRARY_PATH != *"${_AVAST_PREFIX}/lib64:"* ]]; then
        export LD_LIBRARY_PATH=${_AVAST_PREFIX}/lib64:$LD_LIBRARY_PATH
    fi
fi


if [[ $XDG_DATA_DIRS != *"${_KDE_PREFIX}/share:"* ]]; then
    export XDG_DATA_DIRS=${_KDE_PREFIX}/share:${_KDE_PREFIX}/share/kde4:/usr/share/kde4:$XDG_DATA_DIRS:/usr/share
fi
if [[ $XDG_DATA_DIRS != *"${_QT_PREFIX}/share:"* ]]; then
    export XDG_DATA_DIRS=${_QT_PREFIX}/share:$XDG_DATA_DIRS
fi
if [[ ! -z "${_AVAST_PREFIX}" ]] && [[ $XDG_DATA_DIRS != *"${_AVAST_PREFIX}/share:"* ]]; then
    export XDG_DATA_DIRS=${_AVAST_PREFIX}/share:$XDG_DATA_DIRS
fi
if [[ $XDG_DATA_DIRS != *"/var/lib/flatpak/exports/share"* ]]; then
    export XDG_DATA_DIRS=/var/lib/flatpak/exports/share:$XDG_DATA_DIRS
fi
if [[ $XDG_DATA_DIRS != *"$HOME/.local/share/flatpak/exports/share"* ]]; then
    export XDG_DATA_DIRS=$HOME/.local/share/flatpak/exports/share:$XDG_DATA_DIRS
fi

if [[ $XDG_CONFIG_DIRS != *"${_KDE_PREFIX}/etc/xdg"* ]]; then
    export XDG_CONFIG_DIRS="${_KDE_PREFIX}/etc/xdg:${XDG_CONFIG_DIRS}:/etc/xdg"
fi
if [[ $XDG_CONFIG_DIRS != *"${_QT_PREFIX}/etc/xdg"* ]]; then
    export XDG_CONFIG_DIRS=${_QT_PREFIX}/etc/xdg:$XDG_CONFIG_DIRS
fi
if [[ ! -z "${_AVAST_PREFIX}" ]] && [[ $XDG_CONFIG_DIRS != *"${_AVAST_PREFIX}/etc/xdg:"* ]]; then
    export XDG_CONFIG_DIRS=${_AVAST_PREFIX}/etc/xdg:$XDG_CONFIG_DIRS
fi

export PATH="/data/KDE/src/sysadmin/repo-metadata/git-helpers:${PATH}"
if [[ $PATH != *"${_KDE_PREFIX}/bin:"* ]]; then
    export PATH=${_KDE_PREFIX}/bin:${_KDE_PREFIX}/libexec/kde4:$PATH
fi
if [[ $PATH != "*${_QT_PREFIX}/bin:"* ]]; then
    export PATH=${_QT_PREFIX}/bin:$PATH
fi
if [[ ! -z "${_AVAST_PREFIX}" ]] && [[ $PATH != *"${_AVAST_PREFIX}/bin:"* ]]; then
    export PATH=${_AVAST_PREFIX}/bin:$PATH
fi
if [[ $PATH != *"$HOME/.local/share/flatpak/exports/bin"* ]]; then
    export PATH=$HOME/.local/share/flatpak/exports/bin:$PATH
fi
if [[ $PATH != *"$HOME/.local/bin"* ]]; then
    export PATH=$HOME/.local/bin:$PATH
fi

if [[ $KDEDIRS != *"${_KDE_PREFIX}:"* ]]; then
    export KDEDIRS=${_KDE_PREFIX}:$KDEDIRS
fi

if [[ $PKG_CONFIG_PATH != *"${_KDE_PREFIX}/lib64/pkgconfig:"* ]]; then
    export PKG_CONFIG_PATH=${_KDE_PREFIX}/lib64/pkgconfig:/usr/lib64/pkgconfig:$PKG_CONFIG_PATH
fi
if [[ $PKG_CONFIG_PATH != *"${_KDE_PREFIX}/lib/pkgconfig:"* ]]; then
    export PKG_CONFIG_PATH=${_KDE_PREFIX}/lib/pkgconfig:$PKG_CONFIG_PATH
fi
if [[ $PKG_CONFIG_PATH != *"${_QT_PREFIX}/lib64/pkgconfig:"* ]]; then
    export PKG_CONFIG_PATH=${_QT_PREFIX}/lib64/pkgconfig:$PKG_CONFIG_PATH
fi
if [[ $PKG_CONFIG_PATH != *"${_QT_PREFIX}/lib/pkgconfig:"* ]]; then
    export PKG_CONFIG_PATH=${_QT_PREFIX}/lib/pkgconfig:$PKG_CONFIG_PATH
fi

if [[ ! -z "${_AVAST_PREFIX}" ]]; then
    if [[ $PKG_CONFIG_PATH != *"${_AVAST_PREFIX}/lib/pkgconfig:"* ]]; then
        export PKG_CONFIG_PATH=${_AVAST_PREFIX}/lib/pkgconfig:$PKG_CONFIG_PATH
    fi
    if [[ $PKG_CONFIG_PATH != *"${_AVAST_PREFIX}/lib64/pkgconfig:"* ]]; then
        export PKG_CONFIG_PATH=${_AVAST_PREFIX}/lib64/pkgconfig:$PKG_CONFIG_PATH
    fi
fi

QT_PLUGIN_PATH=""
if [[ $QT_PLUGIN_PATH != *"${_KDE_PREFIX}/lib64/plugins:"* ]]; then
    export QT_PLUGIN_PATH=${_KDE_PREFIX}/lib64/plugins:${_KDE_PREFIX}/lib64/kde4/plugins:${_KDE_PREFIX}/lib64/qt5/plugins:$QT_PLUGIN_PATH
fi
if [[ $QT_PLUGIN_PATH != *"${_QT_PREFIX}/plugins:"* ]]; then
    export QT_PLUGIN_PATH=${_QT_PREFIX}/plugins:$QT_PLUGIN_PATH
fi


QML2_IMPORT_PATH=""
if [[ $QML2_IMPORT_PATH != *"${_KDE_PREFIX}/lib64/qml:"* ]]; then
    export QML2_IMPORT_PATH=${_KDE_PREFIX}/lib64/qml:$QML2_IMPORT_PATH
fi
if [[ $QML2_IMPORT_PATH != "*${_QT_PREFIX}/qml:"* ]]; then
    export QML2_IMPORT_PATH=${_QT_PREFIX}/qml:$QML2_IMPORT_PATH
fi

export SASL_PATH=${_KDE_PREFIX}/lib64/sasl2:${SASL_PATH:-/usr/lib64/sasl2}

export MANPATH=/data/install/kde/share/man:/usr/local/share/man:/usr/share/man

#export XCURSOR_PATH=${_KDE_PREFIX}/share/icons

export EDITOR=nvim

#export QT_STYLE_OVERRIDE=breeze
#export QT_QUICK_CONTROLS_STYLE=Breeze

# My Qt5 seems to be having problems finding the plugin path
#export QT_QPA_PLATFORM_PLUGIN_PATH=${_QT_PREFIX}/plugins/platforms

# Until I find how to change int in KDE
export LANG="en_US.UTF-8"
#export LC_ALL="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"

# Super Qt5 logging
export QT_MESSAGE_PATTERN="$(echo -e '%{if-warning}\e[1;33m%{endif}%{if-fatal}\e[31m%{endif}%{if-critical}\e[31m%{endif}[%{time HH:mm:ss.zzz}] %{appname}(%{pid}:%{threadid}) %{if-category}%{category}: %{endif}\e[0m: %{function}: %{message}')"
#export QT_MESSAGE_PATTERN="$(echo -e '[%{time HH:mm:ss.zzz}] %{if-warning}\e[1;33m%{endif}%{if-fatal}\e[31m%{endif}%{if-critical}\e[31m%{endif}%{appname}(%{pid}) %{if-category}%{category}: %{endif}%{function}:%{line}: \e[0m: %{message}')"
#export QT_MESSAGE_PATTERN="$(echo -e '[%{time}] %{if-warning}\e[1;33m%{endif}%{if-fatal}\e[31m%{endif}%{if-critical}\e[31m%{endif}%{appname}(%{pid}) %{if-category}%{category}: %{endif}%{file}:%{line}(%{function}): \e[0m: %{message}\n\t%{backtrace depth=10 separator=\n\t}')"

export QT_LOGGING_CONF="$HOME/.qt_logging_rules.conf"
#export QT_LOGGING_TO_CONSOLE=1
export QT_ASSUME_STDERR_HAS_CONSOLE=1
export QT_FORCE_STDERR_LOGGING=1
export QT_SCALE_FACTOR=1

export KDE_FORK_SLAVES=0

#unset XDG_RUNTIME_DIR
#export XDG_RUNTIME_DIR=/var/run/user/$(id -u)
export SSH_ASKPASS=`which ksshaskpass`
export SSH_AUTH_SOCK=${XDG_RUNTIME_DIR}/gnupg/S.gpg-agent.ssh

#export PYTHONSTARTUP=~/.pyrc

export GPG_TTY=$(tty)

# Colorful less
_default=$(tput sgr0)
_red=$(tput setaf 1)
_green=$(tput setaf 2)
_purple=$(tput setaf 5)
_orange=$(tput setaf 9)
export PAGER=less
export LESS_TERMCAP_mb=$_red
export LESS_TERMCAP_md=$_orange
export LESS_TERMCAP_me=$_default
export LESS_TERMCAP_se=$_defautt
export LESS_TERMCAP_so=$_purple
export LESS_TERMCAP_ue=$_default
export LESS_TERMCAP_us=$_green

if [ -f ~/.cargo/env ]; then
    source ~/.cargo/env
fi


# .cht.sh
if [ -f ~/.bash.d/cht.sh ]; then
    . ~/.bash.d/cht.sh
fi

# Start tmux when running interactively
#[[ $- != *i* ]] && return
#[[ -z "$TMUX" ]] && exec tmux
